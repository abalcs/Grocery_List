{"version":3,"sources":["components/FormContainer.js","components/GroceryList.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["FormContainer","props","className","onSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","item","items","then","setItems","onChange","inputCallback","value","type","name","placeholder","GroceryList","useState","groceries","setGroceries","hasGroceries","setHasGroceries","useEffect","res","json","data","forEach","obj","edit","length","map","grocery","i","key","onKeyUp","keyCode","_id","closeEdit","target","editGrocery","onClick","showEditGroceryInput","splice","deleteGrocery","Header","now","Date","format","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5e71523.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction FormContainer(props) {\n\n    function createGrocery(event) {\n        event.preventDefault();\n\n        fetch('/api/groceries', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                item: props.items\n            })\n        }).then(() => {\n            props.setItems([]);\n        });\n    }\n\n    return (\n        <main>\n            <form className='inputForm' onSubmit={createGrocery}> \n                <input onChange={props.inputCallback} value={props.items} type=\"text\" name=\"item\" placeholder='  What do you need ?'></input><br></br>\n                <button className='submitBtn'>ADD TO LIST</button>\n            </form>\n        </main>\n    )\n\n}\n\nexport default FormContainer;\n\n","import React, { useState, useEffect } from 'react';\n\nfunction GroceryList() {\n    const [groceries, setGroceries] = useState([]);\n    const [hasGroceries, setHasGroceries] = useState(true);\n\n    useEffect(() => {\n        fetch('/api/groceries')\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            data.forEach((obj) => obj.edit = false);\n            setGroceries(data);\n\n            if(!data.length) {\n                setHasGroceries(false);\n            }\n        })  \n    }, [groceries]);\n\n    function deleteGrocery(event, grocery, i) {\n        fetch('/api/groceries', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                _id: grocery._id\n            })\n        }).then(res => {\n            groceries.splice(i, 1);\n            setGroceries([...groceries]);\n\n            if (!groceries.length) {\n                setHasGroceries(false);\n            }\n        });\n    }\n\n    function showEditGroceryInput(event, grocery, i) {\n        grocery.edit = true;\n        setGroceries([...groceries]);\n    }\n\n    function editGrocery(event, grocery, i) {\n        grocery.item = event.target.value;\n        setGroceries([...groceries]);\n    }\n\n    function closeEdit(event, grocery) {\n\n        if(event.keyCode === 13) {\n            grocery.edit = false;\n            setGroceries([...groceries])\n        }\n\n        fetch('/api/groceries', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                _id: grocery._id\n            })\n        }).then(() => {\n\n        })\n    }\n\n    return (\n        <section    >\n            <ul>\n                {groceries.length ? (\n                    groceries.map((grocery, i) => {\n                        return (\n                            <li key={i}>\n                                {grocery.edit ? <input onKeyUp={((event) => closeEdit(event, grocery))} onChange={(event) => editGrocery(event, grocery, i)} value={grocery.item} type='text' /> : grocery.item}\n                                <div className='btnContainer'>\n                                    <button className='editBtn' onClick={(event) => showEditGroceryInput(event, grocery, i)}>Edit</button> \n                                    <button className='deleteBtn' onClick={(event) => deleteGrocery(event, grocery, i)}>Remove</button> \n                                </div>\n                            </li>\n                        )\n                    })\n                ) : hasGroceries ? <p>Loading...</p> : <p className='emptyList'>No groceries currently saved.</p>}\n            </ul>\n        </section>\n    );\n};\n\nexport default GroceryList;\n \n\n","import React, { useEffect } from 'react';\nimport DayJS from 'react-dayjs';\n\nconst Header = () => {\n  \n  let now\n\n  useEffect(() => {\n    now = new Date()\n  })\n  \n\n  return (\n    <header>\n        <h1>FAMILY GROCERY LIST</h1>\n        <p><DayJS className='dayJS' format='dddd MMMM D, YYYY'>{now}</DayJS></p>\n        <p className='dayJS'>Current Time: <DayJS className='dayJS' format='h:mm a'>{now}</DayJS></p>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n\n  return (\n    <footer>\n        <h4>&copy; Balcom Applications Inc. 2020</h4>\n        <p></p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport FormContainer from './components/FormContainer';\nimport GroceryList from './components/GroceryList';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst App = () => {\n    const [items, setItems] = useState([]);\n   \n    function inputCallback(event) {\n        setItems(event.target.value);\n    }\n\n    return (\n        <>\n        <div className='appBody'>\n            <Header />\n            <FormContainer items={items} setItems={setItems} inputCallback={inputCallback} / >\n            <GroceryList />\n            <Footer />\n        </div> \n        </>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}