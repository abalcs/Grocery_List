{"ast":null,"code":"import _toConsumableArray from\"/Users/alanbalcom/Desktop/grocery_list/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/alanbalcom/Desktop/grocery_list/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';function GroceryList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),groceries=_useState2[0],setGroceries=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),hasGroceries=_useState4[0],setHasGroceries=_useState4[1];useEffect(function(){fetch('/api/groceries').then(function(res){return res.json();}).then(function(data){data.forEach(function(obj){return obj.edit=false;});setGroceries(data);if(!data.length){setHasGroceries(false);}});},[groceries]);function deleteGrocery(event,grocery,i){fetch('/api/groceries',{method:'DELETE',headers:{'Content-Type':'application/json'},body:JSON.stringify({_id:grocery._id})}).then(function(res){groceries.splice(i,1);setGroceries(_toConsumableArray(groceries));if(!groceries.length){setHasGroceries(false);}});}function showEditGroceryInput(event,grocery,i){grocery.edit=true;setGroceries(_toConsumableArray(groceries));}function editGrocery(event,grocery,i){grocery.item=event.target.value;setGroceries(_toConsumableArray(groceries));}function closeEdit(event,grocery){if(event.keyCode===13){grocery.edit=false;setGroceries(_toConsumableArray(groceries));}fetch('/api/groceries',{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({_id:grocery._id})}).then(function(){});}return/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"ul\",null,groceries.length?groceries.map(function(grocery,i){return/*#__PURE__*/React.createElement(\"li\",{key:i},grocery.edit?/*#__PURE__*/React.createElement(\"input\",{onKeyUp:function onKeyUp(event){return closeEdit(event,grocery);},onChange:function onChange(event){return editGrocery(event,grocery,i);},value:grocery.item,type:\"text\"}):grocery.item,/*#__PURE__*/React.createElement(\"div\",{className:\"btnContainer\"},/*#__PURE__*/React.createElement(\"button\",{className:\"editBtn\",onClick:function onClick(event){return showEditGroceryInput(event,grocery,i);}},\"Edit\"),/*#__PURE__*/React.createElement(\"button\",{className:\"deleteBtn\",onClick:function onClick(event){return deleteGrocery(event,grocery,i);}},\"Remove\")));}):hasGroceries?/*#__PURE__*/React.createElement(\"p\",null,\"Loading...\"):/*#__PURE__*/React.createElement(\"p\",{className:\"emptyList\"},\"No groceries currently saved.\")));};export default GroceryList;","map":{"version":3,"sources":["/Users/alanbalcom/Desktop/grocery_list/client/src/components/GroceryList.js"],"names":["React","useState","useEffect","GroceryList","groceries","setGroceries","hasGroceries","setHasGroceries","fetch","then","res","json","data","forEach","obj","edit","length","deleteGrocery","event","grocery","i","method","headers","body","JSON","stringify","_id","splice","showEditGroceryInput","editGrocery","item","target","value","closeEdit","keyCode","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction GroceryList() {\n    const [groceries, setGroceries] = useState([]);\n    const [hasGroceries, setHasGroceries] = useState(true);\n\n    useEffect(() => {\n        fetch('/api/groceries')\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            data.forEach((obj) => obj.edit = false);\n            setGroceries(data);\n\n            if(!data.length) {\n                setHasGroceries(false);\n            }\n        })  \n    }, [groceries]);\n\n    function deleteGrocery(event, grocery, i) {\n        fetch('/api/groceries', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                _id: grocery._id\n            })\n        }).then(res => {\n            groceries.splice(i, 1);\n            setGroceries([...groceries]);\n\n            if (!groceries.length) {\n                setHasGroceries(false);\n            }\n        });\n    }\n\n    function showEditGroceryInput(event, grocery, i) {\n        grocery.edit = true;\n        setGroceries([...groceries]);\n    }\n\n    function editGrocery(event, grocery, i) {\n        grocery.item = event.target.value;\n        setGroceries([...groceries]);\n    }\n\n    function closeEdit(event, grocery) {\n\n        if(event.keyCode === 13) {\n            grocery.edit = false;\n            setGroceries([...groceries])\n        }\n\n        fetch('/api/groceries', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                _id: grocery._id\n            })\n        }).then(() => {\n\n        })\n    }\n\n    return (\n        <section    >\n            <ul>\n                {groceries.length ? (\n                    groceries.map((grocery, i) => {\n                        return (\n                            <li key={i}>\n                                {grocery.edit ? <input onKeyUp={((event) => closeEdit(event, grocery))} onChange={(event) => editGrocery(event, grocery, i)} value={grocery.item} type='text' /> : grocery.item}\n                                <div className='btnContainer'>\n                                    <button className='editBtn' onClick={(event) => showEditGroceryInput(event, grocery, i)}>Edit</button> \n                                    <button className='deleteBtn' onClick={(event) => deleteGrocery(event, grocery, i)}>Remove</button> \n                                </div>\n                            </li>\n                        )\n                    })\n                ) : hasGroceries ? <p>Loading...</p> : <p className='emptyList'>No groceries currently saved.</p>}\n            </ul>\n        </section>\n    );\n};\n\nexport default GroceryList;\n \n\n"]},"metadata":{},"sourceType":"module"}