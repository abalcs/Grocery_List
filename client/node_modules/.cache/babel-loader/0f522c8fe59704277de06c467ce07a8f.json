{"ast":null,"code":"var _jsxFileName = \"/Users/alanbalcom/Desktop/grocery_list/client/src/components/GroceryList.js\";\nimport React, { useEffect } from 'react';\nuseEffect(() => {\n  fetch('/api/groceries').then(res => {\n    return res.json();\n  }).then(data => {\n    data.forEach(obj => obj.edit = false);\n    console.log(data);\n    props.setGroceries(data);\n\n    if (!data.length) {\n      props.setHasGroceries(false);\n    }\n  });\n}, []);\n\nfunction GroceryList(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"groceryContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"groceryList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, props.groceries.item)));\n}\n\nexport default GroceryList; // function GroceryList(props) {\n// const [groceries, setGroceries] = useState([]);\n// const [hasGroceries, setHasGroceries] = useState(true);\n//     function deleteGrocery(event, job, i) {\n//         fetch('/api/groceries', {\n//             method: 'DELETE',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 _id: grocery.id\n//             })\n//         }).then(res => {\n//             grocery.splice(i, 1);\n//             setGrocery([...grocery]);\n//             if (!grocery.length) {\n//                 setHasGroceries(false);\n//             }\n//         });\n//     }","map":{"version":3,"sources":["/Users/alanbalcom/Desktop/grocery_list/client/src/components/GroceryList.js"],"names":["React","useEffect","fetch","then","res","json","data","forEach","obj","edit","console","log","props","setGroceries","length","setHasGroceries","GroceryList","groceries","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEAA,SAAS,CAAC,MAAM;AACZC,EAAAA,KAAK,CAAC,gBAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAAS;AACX,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAHD,EAIKF,IAJL,CAIWG,IAAD,IAAU;AAEZA,IAAAA,IAAI,CAACC,OAAL,CAAcC,GAAD,IAASA,GAAG,CAACC,IAAJ,GAAW,KAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAM,IAAAA,KAAK,CAACC,YAAN,CAAmBP,IAAnB;;AAEA,QAAI,CAACA,IAAI,CAACQ,MAAV,EAAkB;AACdF,MAAAA,KAAK,CAACG,eAAN,CAAsB,KAAtB;AACH;AACJ,GAbL;AAcH,CAfQ,EAeN,EAfM,CAAT;;AAiBA,SAASC,WAAT,CAAqBJ,KAArB,EAA4B;AAIxB,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACK,SAAN,CAAgBC,IAArB,CADJ,CADJ,CADJ;AAOH;;AAGD,eAAeF,WAAf,C,CAEA;AACI;AACA;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\n\nuseEffect(() => {\n    fetch('/api/groceries')\n    .then((res) => {\n        return res.json();\n    })\n        .then((data) => {\n            \n            data.forEach((obj) => obj.edit = false);\n            console.log(data)\n            props.setGroceries(data);\n            \n            if (!data.length) {\n                props.setHasGroceries(false);\n            }\n        });\n}, []);\n\nfunction GroceryList(props) {\n    \n        \n\n    return (\n        <div className='groceryContainer'>\n            <ul className='groceryList'>\n                <li>{props.groceries.item}</li>\n            </ul>\n        </div>\n    );\n}\n\n\nexport default GroceryList;\n\n// function GroceryList(props) {\n    // const [groceries, setGroceries] = useState([]);\n    // const [hasGroceries, setHasGroceries] = useState(true);\n\n\n\n//     function deleteGrocery(event, job, i) {\n//         fetch('/api/groceries', {\n//             method: 'DELETE',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 _id: grocery.id\n//             })\n//         }).then(res => {\n//             grocery.splice(i, 1);\n//             setGrocery([...grocery]);\n\n//             if (!grocery.length) {\n//                 setHasGroceries(false);\n//             }\n//         });\n//     }\n"]},"metadata":{},"sourceType":"module"}