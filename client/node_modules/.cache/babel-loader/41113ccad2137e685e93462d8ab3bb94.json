{"ast":null,"code":"var _jsxFileName = \"/Users/alanbalcom/Desktop/grocery_list/client/src/components/GroceryList.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction GroceryContainer() {\n  const [grocery, setGrocery] = useState([]);\n  const [hasGroceries, setHasGroceries] = useState(true);\n  useEffect(() => {\n    fetch('/api/groceries').then(res => {\n      return res.json();\n    }).then(data => {\n      data.forEach(obj => obj.edit = false);\n      setGrocery(data);\n\n      if (!data.length) {\n        setHasGroceries(false);\n      }\n    });\n  }, []);\n\n  function deleteGrocery(event, job, i) {\n    fetch('/api/groceries', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: grocery.id\n      })\n    }).then(res => {\n      grocery.splice(i, 1);\n      setGrocery([...grocery]);\n    });\n  }\n\n  function createGrocery(event) {\n    event.preventDefault();\n    fetch('/api/groceries', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        item: grocery\n      })\n    }).then(() => {\n      setGrocery([]);\n    });\n  }\n\n  function inputCallback(event) {\n    setGrocery(event.target.value);\n    console.log(grocery);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"groceryForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: createGrocery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"groceries\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Enter Item\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 62\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: inputCallback,\n    value: grocery.item,\n    type: \"text\",\n    id: \"groceryInput\",\n    name: \"grocery\",\n    placeholder: \"Type your grocery item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 160\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submitButton\",\n    className: \"submitButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Add Item\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"groceryList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, grocery.length ? grocery.map((grocery, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, grocery.item, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"editButton\",\n      className: \"editButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"deleteButton\",\n      className: \"deleteButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \"Delete\"));\n  }) : hasGroceries ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 32\n    }\n  }, \"Wow much empty :(\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 59\n    }\n  }, \"No items entered yet...\")));\n}\n\nexport default GroceryContainer;","map":{"version":3,"sources":["/Users/alanbalcom/Desktop/grocery_list/client/src/components/GroceryList.js"],"names":["React","useState","useEffect","GroceryContainer","grocery","setGrocery","hasGroceries","setHasGroceries","fetch","then","res","json","data","forEach","obj","edit","length","deleteGrocery","event","job","i","method","headers","body","JSON","stringify","_id","id","splice","createGrocery","preventDefault","item","inputCallback","target","value","console","log","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,gBAAT,GAA4B;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAAC,gBAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHD,EAIKF,IAJL,CAIWG,IAAD,IAAU;AACZA,MAAAA,IAAI,CAACC,OAAL,CAAcC,GAAD,IAASA,GAAG,CAACC,IAAJ,GAAW,KAAjC;AAEAV,MAAAA,UAAU,CAACO,IAAD,CAAV;;AAEA,UAAI,CAACA,IAAI,CAACI,MAAV,EAAkB;AACdT,QAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AACJ,KAZL;AAaH,GAdQ,EAcN,EAdM,CAAT;;AAgBA,WAASU,aAAT,CAAuBC,KAAvB,EAA8BC,GAA9B,EAAmCC,CAAnC,EAAsC;AAClCZ,IAAAA,KAAK,CAAC,gBAAD,EAAmB;AACpBa,MAAAA,MAAM,EAAE,QADY;AAEpBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFW;AAKpBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,GAAG,EAAEtB,OAAO,CAACuB;AADI,OAAf;AALc,KAAnB,CAAL,CAQGlB,IARH,CAQQC,GAAG,IAAI;AACXN,MAAAA,OAAO,CAACwB,MAAR,CAAeR,CAAf,EAAkB,CAAlB;AACAf,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,CAAD,CAAV;AACH,KAXD;AAYH;;AAED,WAASyB,aAAT,CAAuBX,KAAvB,EAA8B;AAC1BA,IAAAA,KAAK,CAACY,cAAN;AAEAtB,IAAAA,KAAK,CAAC,gBAAD,EAAmB;AACpBa,MAAAA,MAAM,EAAE,MADY;AAEpBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFW;AAKpBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBM,QAAAA,IAAI,EAAE3B;AADW,OAAf;AALc,KAAnB,CAAL,CAQGK,IARH,CAQQ,MAAM;AACVJ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KAVD;AAWH;;AAED,WAAS2B,aAAT,CAAuBd,KAAvB,EAA8B;AAC1Bb,IAAAA,UAAU,CAACa,KAAK,CAACe,MAAN,CAAaC,KAAd,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhC,OAAZ;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEyB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eACiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjD,eAEI;AAAO,IAAA,QAAQ,EAAEG,aAAjB;AAAgC,IAAA,KAAK,EAAE5B,OAAO,CAAC2B,IAA/C;AAAqD,IAAA,IAAI,EAAC,MAA1D;AAAiE,IAAA,EAAE,EAAC,cAApE;AAAmF,IAAA,IAAI,EAAC,SAAxF;AAAkG,IAAA,WAAW,EAAC,wBAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAEmJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnJ,eAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,EAAE,EAAC,cAAzB;AAAwC,IAAA,SAAS,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,eAOI;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B3B,OAAO,CAACY,MAAR,GACzBZ,OAAO,CAACiC,GAAR,CAAY,CAACjC,OAAD,EAAUgB,CAAV,KAAgB;AACxB,wBACI;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAahB,OAAO,CAAC2B,IAArB,eACI;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAwB,MAAA,SAAS,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,MAAA,EAAE,EAAC,cAAX;AAA0B,MAAA,SAAS,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH,GAPD,CADyB,GASzBzB,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAH,gBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAT9C,CAPJ,CADJ;AAuBH;;AAED,eAAeH,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction GroceryContainer() {\n    const [grocery, setGrocery] = useState([]);\n    const [hasGroceries, setHasGroceries] = useState(true);\n\n    useEffect(() => {\n        fetch('/api/groceries')\n        .then((res) => {\n            return res.json();\n        })\n            .then((data) => {\n                data.forEach((obj) => obj.edit = false);\n\n                setGrocery(data);\n\n                if (!data.length) {\n                    setHasGroceries(false);\n                }\n            });\n    }, []);\n\n    function deleteGrocery(event, job, i) {\n        fetch('/api/groceries', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                _id: grocery.id\n            })\n        }).then(res => {\n            grocery.splice(i, 1);\n            setGrocery([...grocery]);\n        })\n    }\n\n    function createGrocery(event) {\n        event.preventDefault();\n\n        fetch('/api/groceries', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                item: grocery\n            })\n        }).then(() => {\n            setGrocery([]);\n        })\n    }\n\n    function inputCallback(event) {\n        setGrocery(event.target.value);\n        console.log(grocery)\n    }\n\n\n    return (\n        <div className='groceryForm'>\n            <form onSubmit={createGrocery}>\n                <label htmlFor='groceries'>Enter Item</label><br></br>\n                <input onChange={inputCallback} value={grocery.item} type='text' id='groceryInput' name='grocery' placeholder='Type your grocery item'></input><br></br>\n                <button type='submit' id='submitButton' className='submitButton'>Add Item</button>\n            </form>\n\n            <ul className='groceryList'>{grocery.length ? (\n                grocery.map((grocery, i) => {\n                    return (\n                        <li key={i}>{grocery.item}\n                            <button id='editButton' className='editButton'>Edit</button>\n                            <button id='deleteButton' className='deleteButton'>Delete</button>\n                        </li>\n                    )\n                })\n            ) : hasGroceries ? <p>Wow much empty :(</p> : <p>No items entered yet...</p>}\n                \n            </ul>\n            \n        </div>\n    );\n}\n\nexport default GroceryContainer;"]},"metadata":{},"sourceType":"module"}